// Copyright 2023 atframework

# pragma once

// This file is  generated by cmake, please don't edit it

#include <config/compile_optimize.h>
#include <config/compiler_features.h>

#cmakedefine LIBATFRAME_UTILS_VERSION_MAJOR @LIBATFRAME_UTILS_VERSION_MAJOR@
#ifndef LIBATFRAME_UTILS_VERSION_MAJOR
#  define LIBATFRAME_UTILS_VERSION_MAJOR 0
#endif
#cmakedefine LIBATFRAME_UTILS_VERSION_MINOR @LIBATFRAME_UTILS_VERSION_MINOR@
#ifndef LIBATFRAME_UTILS_VERSION_MINOR
#  define LIBATFRAME_UTILS_VERSION_MINOR 0
#endif
#cmakedefine LIBATFRAME_UTILS_VERSION_PATCH @LIBATFRAME_UTILS_VERSION_PATCH@
#ifndef LIBATFRAME_UTILS_VERSION_PATCH
#  define LIBATFRAME_UTILS_VERSION_PATCH 0
#endif
#cmakedefine LIBATFRAME_UTILS_VERSION "@LIBATFRAME_UTILS_VERSION@"

#cmakedefine LIBATFRAME_UTILS_API_LEVEL @LIBATFRAME_UTILS_API_LEVEL@
#define LIBATFRAME_UTILS_NAMESPACE_BEGIN namespace util { inline namespace @LIBATFRAME_UTILS_ABI_TAG@ {
#define LIBATFRAME_UTILS_NAMESPACE_END } }
#define LIBATFRAME_UTILS_NAMESPACE_ID util::@LIBATFRAME_UTILS_ABI_TAG@
#define LIBATFRAME_UTILS_NAMESPACE "util::@LIBATFRAME_UTILS_ABI_TAG@"

#if defined(LIBATFRAME_UTILS_API_NATIVE) && LIBATFRAME_UTILS_API_NATIVE
#  if defined(LIBATFRAME_UTILS_API_DLL) && LIBATFRAME_UTILS_API_DLL
#    define LIBATFRAME_UTILS_API UTIL_SYMBOL_EXPORT
#  else
#    define LIBATFRAME_UTILS_API
#  endif
#else
#  if defined(LIBATFRAME_UTILS_API_DLL) && LIBATFRAME_UTILS_API_DLL
#    define LIBATFRAME_UTILS_API UTIL_SYMBOL_IMPORT
#  else
#    define LIBATFRAME_UTILS_API
#  endif
#endif
#define LIBATFRAME_UTILS_API_HEAD_ONLY UTIL_SYMBOL_VISIBLE
#define LIBATFRAME_UTILS_API_C(R) extern "C" LIBATFRAME_UTILS_API R __cdecl

#if defined(_REENTRANT)
#  define THREAD_TLS_USE_PTHREAD 1
#else
#  ifndef THREAD_TLS_USE_PTHREAD
#cmakedefine THREAD_TLS_USE_PTHREAD @THREAD_TLS_USE_PTHREAD@
#  endif
#endif

#cmakedefine01 LIBATFRAME_UTILS_ENABLE_LIBUUID
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_UUID_WINRPC
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_UUID_INTERNAL_IMPLEMENT
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_WINDOWS_MKTEMP
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_POSIX_MKSTEMP

#cmakedefine LOG_WRAPPER_ENABLE_LUA_SUPPORT @LOG_WRAPPER_ENABLE_LUA_SUPPORT@
#cmakedefine LOG_STACKTRACE_USING_LIBUNWIND @LOG_STACKTRACE_USING_LIBUNWIND@
#cmakedefine LOG_STACKTRACE_USING_EXECINFO @LOG_STACKTRACE_USING_EXECINFO@
#cmakedefine LOG_STACKTRACE_USING_UNWIND @LOG_STACKTRACE_USING_UNWIND@
#cmakedefine LOG_STACKTRACE_USING_DBGHELP @LOG_STACKTRACE_USING_DBGHELP@
#cmakedefine LOG_STACKTRACE_USING_DBGENG @LOG_STACKTRACE_USING_DBGENG@
#cmakedefine LOG_STACKTRACE_MAX_STACKS @LOG_STACKTRACE_MAX_STACKS@
#cmakedefine LOG_WRAPPER_MAX_SIZE_PER_LINE @LOG_WRAPPER_MAX_SIZE_PER_LINE@
#cmakedefine LOG_WRAPPER_CATEGORIZE_SIZE @LOG_WRAPPER_CATEGORIZE_SIZE@
#cmakedefine01 LOG_SINK_ENABLE_SYSLOG_SUPPORT
#cmakedefine NETWORK_EVPOLL_ENABLE_LIBUV @NETWORK_EVPOLL_ENABLE_LIBUV@
#cmakedefine NETWORK_ENABLE_CURL @NETWORK_ENABLE_CURL@
#cmakedefine ENABLE_MIXEDINT_MAGIC_MASK @ENABLE_MIXEDINT_MAGIC_MASK@
#cmakedefine LIBATFRAME_UTILS_LOCK_DISABLE_MT @LIBATFRAME_UTILS_LOCK_DISABLE_MT@

#cmakedefine CRYPTO_USE_OPENSSL @CRYPTO_USE_OPENSSL@
#cmakedefine CRYPTO_USE_LIBRESSL @CRYPTO_USE_LIBRESSL@
#cmakedefine CRYPTO_USE_BORINGSSL @CRYPTO_USE_BORINGSSL@
#cmakedefine CRYPTO_USE_MBEDTLS @CRYPTO_USE_MBEDTLS@
#cmakedefine CRYPTO_USE_LIBSODIUM @CRYPTO_USE_LIBSODIUM@

#cmakedefine01 LIBATFRAME_UTILS_ENABLE_STD_FORMAT
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_FMTLIB
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_FORWARD_FMTTEXT
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_RTTI
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_EXCEPTION
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_STD_EXCEPTION_PTR
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_SOURCE_LOCATION


// Patch for disable RTTI on later options
#if defined(LIBATFRAME_UTILS_ENABLE_RTTI) && LIBATFRAME_UTILS_ENABLE_RTTI
#  if defined(_MSC_VER)
#    if !defined(_CPPRTTI)
#      undef LIBATFRAME_UTILS_ENABLE_RTTI
#    endif
#  elif defined(__GNUC__) && __GNUC__ >= 4
#    if !defined(__GXX_RTTI)
#      undef LIBATFRAME_UTILS_ENABLE_RTTI
#    endif
#  endif
#endif

#if defined(LIBATFRAME_UTILS_ENABLE_STD_FORMAT) && LIBATFRAME_UTILS_ENABLE_STD_FORMAT
#  define LOG_WRAPPER_ENABLE_FWAPI 1
#  define LOG_WRAPPER_FWAPI_NAMESPACE std::
#  define LOG_WRAPPER_FWAPI_NAMESPACE_ID std
#elif defined(LIBATFRAME_UTILS_ENABLE_FMTLIB) && LIBATFRAME_UTILS_ENABLE_FMTLIB
#  define LOG_WRAPPER_ENABLE_FWAPI 1
#  define LOG_WRAPPER_FWAPI_NAMESPACE fmt::
#  define LOG_WRAPPER_FWAPI_NAMESPACE_ID fmt
#endif

#cmakedefine01 LIBATFRAME_UTILS_GSL_TEST_STL_STRING_VIEW
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_GSL_WITH_MS_GSL
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_GSL_WITH_GSL_LITE
#cmakedefine01 LIBATFRAME_UTILS_ENABLE_GSL_WITH_FALLBACK_STL

#if defined(LIBATFRAME_UTILS_ENABLE_GSL_WITH_FALLBACK_STL) && LIBATFRAME_UTILS_ENABLE_GSL_WITH_FALLBACK_STL
#cmakedefine01 LIBATFRAME_UTILS_GSL_TEST_FALLBACK_STL_SPAN
#endif

#cmakedefine01 LIBATFRAME_UTILS_UNORDERED_MAP_SET_HAS_RESERVE
#define LIBATFRAME_UTILS_AUTO_SELETC_MAP(...) std::unordered_map<__VA_ARGS__>
#define LIBATFRAME_UTILS_AUTO_SELETC_SET(...) std::unordered_set<__VA_ARGS__>
