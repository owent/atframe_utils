// Copyright 2025 atframework

# pragma once

// This file is  generated by cmake, please don't edit it

#include <config/compile_optimize.h>
#include <config/compiler_features.h>

// clang-format off

// Import the C++20 feature-test macros
#ifdef __has_include
#  if __has_include(<version>)
#    include <version>
#  endif
#elif defined(_MSC_VER) && ((defined(__cplusplus) && __cplusplus >= 202002L) || \
                            (defined(_MSVC_LANG) && _MSVC_LANG >= 202002L))
#  if _MSC_VER >= 1922
#    include <version>
#  endif
#endif

#cmakedefine ATFRAMEWORK_UTILS_VERSION_MAJOR @ATFRAMEWORK_UTILS_VERSION_MAJOR@
#ifndef ATFRAMEWORK_UTILS_VERSION_MAJOR
#  define ATFRAMEWORK_UTILS_VERSION_MAJOR 0
#endif
#cmakedefine ATFRAMEWORK_UTILS_VERSION_MINOR @ATFRAMEWORK_UTILS_VERSION_MINOR@
#ifndef ATFRAMEWORK_UTILS_VERSION_MINOR
#  define ATFRAMEWORK_UTILS_VERSION_MINOR 0
#endif
#cmakedefine ATFRAMEWORK_UTILS_VERSION_PATCH @ATFRAMEWORK_UTILS_VERSION_PATCH@
#ifndef ATFRAMEWORK_UTILS_VERSION_PATCH
#  define ATFRAMEWORK_UTILS_VERSION_PATCH 0
#endif
#cmakedefine ATFRAMEWORK_UTILS_VERSION "@ATFRAMEWORK_UTILS_VERSION@"

#cmakedefine ATFRAMEWORK_UTILS_API_LEVEL @ATFRAMEWORK_UTILS_API_LEVEL@
#define ATFRAMEWORK_UTILS_NAMESPACE_BEGIN namespace atframework { namespace util { inline namespace @ATFRAMEWORK_UTILS_ABI_TAG@ {
#define ATFRAMEWORK_UTILS_NAMESPACE_END } } }
#define ATFRAMEWORK_UTILS_NAMESPACE_ID atframework::util::@ATFRAMEWORK_UTILS_ABI_TAG@
#define ATFRAMEWORK_UTILS_NAMESPACE "atframework::util::@ATFRAMEWORK_UTILS_ABI_TAG@"

// Short name of namespace for atframework
namespace atframework {
namespace util {
inline namespace @ATFRAMEWORK_UTILS_ABI_TAG@ {}
} // namespace util
} // namespace atframework
#ifndef ATFRAMEWORK_NAMESPACE_SHORT_ALIAS
#  define ATFRAMEWORK_NAMESPACE_SHORT_ALIAS
namespace atfw = atframework;
#endif

#if defined(ATFRAMEWORK_UTILS_API_NATIVE) && ATFRAMEWORK_UTILS_API_NATIVE
#  if defined(ATFRAMEWORK_UTILS_API_DLL) && ATFRAMEWORK_UTILS_API_DLL
#    define ATFRAMEWORK_UTILS_API ATFW_UTIL_SYMBOL_EXPORT
#  else
#    define ATFRAMEWORK_UTILS_API ATFW_UTIL_SYMBOL_VISIBLE
#  endif
#else
#  if defined(ATFRAMEWORK_UTILS_API_DLL) && ATFRAMEWORK_UTILS_API_DLL
#    define ATFRAMEWORK_UTILS_API ATFW_UTIL_SYMBOL_IMPORT
#  else
#    define ATFRAMEWORK_UTILS_API ATFW_UTIL_SYMBOL_VISIBLE
#  endif
#endif
#define ATFRAMEWORK_UTILS_API_HEAD_ONLY ATFW_UTIL_SYMBOL_VISIBLE
#define ATFRAMEWORK_UTILS_API_C(R) extern "C" ATFRAMEWORK_UTILS_API R __cdecl

#if defined(_REENTRANT)
#  define ATFRAMEWORK_UTILS_THREAD_TLS_USE_PTHREAD 1
#else
#  ifndef ATFRAMEWORK_UTILS_THREAD_TLS_USE_PTHREAD
#cmakedefine ATFRAMEWORK_UTILS_THREAD_TLS_USE_PTHREAD @ATFRAMEWORK_UTILS_THREAD_TLS_USE_PTHREAD@
#  endif
#endif

#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_LIBUUID
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_UUID_WINRPC
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_UUID_INTERNAL_IMPLEMENT
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_WINDOWS_MKTEMP
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_POSIX_MKSTEMP

#cmakedefine ATFRAMEWORK_UTILS_LOG_ENABLE_LUA_SUPPORT @ATFRAMEWORK_UTILS_LOG_ENABLE_LUA_SUPPORT@
#cmakedefine ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_LIBUNWIND @ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_LIBUNWIND@
#cmakedefine ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_EXECINFO @ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_EXECINFO@
#cmakedefine ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_UNWIND @ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_UNWIND@
#cmakedefine ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_DBGHELP @ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_DBGHELP@
#cmakedefine ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_DBGENG @ATFRAMEWORK_UTILS_LOG_STACKTRACE_USING_DBGENG@
#cmakedefine ATFRAMEWORK_UTILS_LOG_STACKTRACE_MAX_STACKS @ATFRAMEWORK_UTILS_LOG_STACKTRACE_MAX_STACKS@
#cmakedefine ATFRAMEWORK_UTILS_LOG_MAX_SIZE_PER_LINE @ATFRAMEWORK_UTILS_LOG_MAX_SIZE_PER_LINE@
#cmakedefine ATFRAMEWORK_UTILS_LOG_CATEGORIZE_SIZE @ATFRAMEWORK_UTILS_LOG_CATEGORIZE_SIZE@
#cmakedefine01 ATFRAMEWORK_UTILS_LOG_SINK_ENABLE_SYSLOG_SUPPORT
#cmakedefine ATFRAMEWORK_UTILS_NETWORK_EVPOLL_ENABLE_LIBUV @ATFRAMEWORK_UTILS_NETWORK_EVPOLL_ENABLE_LIBUV@
#cmakedefine ATFRAMEWORK_UTILS_NETWORK_ENABLE_CURL @ATFRAMEWORK_UTILS_NETWORK_ENABLE_CURL@
#cmakedefine ATFRAMEWORK_UTILS_ENABLE_MIXEDINT_MAGIC_MASK @ATFRAMEWORK_UTILS_ENABLE_MIXEDINT_MAGIC_MASK@
#cmakedefine ATFRAMEWORK_UTILS_LOCK_DISABLE_MT @ATFRAMEWORK_UTILS_LOCK_DISABLE_MT@

#cmakedefine ATFRAMEWORK_UTILS_CRYPTO_USE_OPENSSL @ATFRAMEWORK_UTILS_CRYPTO_USE_OPENSSL@
#cmakedefine ATFRAMEWORK_UTILS_CRYPTO_USE_LIBRESSL @ATFRAMEWORK_UTILS_CRYPTO_USE_LIBRESSL@
#cmakedefine ATFRAMEWORK_UTILS_CRYPTO_USE_BORINGSSL @ATFRAMEWORK_UTILS_CRYPTO_USE_BORINGSSL@
#cmakedefine ATFRAMEWORK_UTILS_CRYPTO_USE_MBEDTLS @ATFRAMEWORK_UTILS_CRYPTO_USE_MBEDTLS@
#cmakedefine ATFRAMEWORK_UTILS_CRYPTO_USE_LIBSODIUM @ATFRAMEWORK_UTILS_CRYPTO_USE_LIBSODIUM@

#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_STD_FORMAT
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_FMTLIB
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_FORWARD_FMTTEXT
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_RTTI
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_EXCEPTION
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_STD_EXCEPTION_PTR
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_SOURCE_LOCATION
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_STACKTRACE


// Patch for disable RTTI on later options
#if defined(ATFRAMEWORK_UTILS_ENABLE_RTTI) && ATFRAMEWORK_UTILS_ENABLE_RTTI
#  if defined(_MSC_VER)
#    if !defined(_CPPRTTI)
#      undef ATFRAMEWORK_UTILS_ENABLE_RTTI
#    endif
#  elif defined(__GNUC__) && __GNUC__ >= 4
#    if !defined(__GXX_RTTI)
#      undef ATFRAMEWORK_UTILS_ENABLE_RTTI
#    endif
#  endif
#endif

#if defined(ATFRAMEWORK_UTILS_ENABLE_STD_FORMAT) && ATFRAMEWORK_UTILS_ENABLE_STD_FORMAT
#  define ATFRAMEWORK_UTILS_STRING_ENABLE_FWAPI 1
#  define ATFRAMEWORK_UTILS_STRING_FWAPI_NAMESPACE std::
#  define ATFRAMEWORK_UTILS_STRING_FWAPI_NAMESPACE_ID std
#elif defined(ATFRAMEWORK_UTILS_ENABLE_FMTLIB) && ATFRAMEWORK_UTILS_ENABLE_FMTLIB
#  define ATFRAMEWORK_UTILS_STRING_ENABLE_FWAPI 1
#  define ATFRAMEWORK_UTILS_STRING_FWAPI_NAMESPACE fmt::
#  define ATFRAMEWORK_UTILS_STRING_FWAPI_NAMESPACE_ID fmt
#endif

#cmakedefine01 ATFRAMEWORK_UTILS_GSL_TEST_STL_STRING_VIEW
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_GSL_WITH_MS_GSL
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_GSL_WITH_GSL_LITE
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_GSL_WITH_FALLBACK_STL
#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_GSL_STRING_VIEW_FROM_STD

#if defined(ATFRAMEWORK_UTILS_ENABLE_GSL_WITH_FALLBACK_STL) && ATFRAMEWORK_UTILS_ENABLE_GSL_WITH_FALLBACK_STL
#cmakedefine01 ATFRAMEWORK_UTILS_GSL_TEST_FALLBACK_STL_SPAN
#endif

#cmakedefine01 ATFRAMEWORK_UTILS_UNORDERED_MAP_SET_HAS_RESERVE

#cmakedefine01 ATFRAMEWORK_UTILS_ENABLE_LEGACY_ALIAS
#if ATFRAMEWORK_UTILS_ENABLE_LEGACY_ALIAS && !defined(ATFRAMEWORK_NAMESPACE_LEGACY_ALIAS)
#  define ATFRAMEWORK_NAMESPACE_LEGACY_ALIAS
namespace util {
using namespace atframework::util;
}
#  ifndef LOG_WRAPPER_ENABLE_FWAPI
#    define LOG_WRAPPER_ENABLE_FWAPI ATFRAMEWORK_UTILS_STRING_ENABLE_FWAPI
#    define LOG_WRAPPER_FWAPI_NAMESPACE ATFRAMEWORK_UTILS_STRING_FWAPI_NAMESPACE
#    define LOG_WRAPPER_FWAPI_NAMESPACE_ID ATFRAMEWORK_UTILS_STRING_FWAPI_NAMESPACE_ID
#  endif

#  if !defined(LIBATFRAME_UTILS_ENABLE_STD_FORMAT) && defined(ATFRAMEWORK_UTILS_ENABLE_STD_FORMAT)
#    define LIBATFRAME_UTILS_ENABLE_STD_FORMAT ATFRAMEWORK_UTILS_ENABLE_STD_FORMAT
#  endif
#  if !defined(LIBATFRAME_UTILS_ENABLE_FMTLIB) && defined(ATFRAMEWORK_UTILS_ENABLE_FMTLIB)
#    define LIBATFRAME_UTILS_ENABLE_FMTLIB ATFRAMEWORK_UTILS_ENABLE_FMTLIB
#  endif
#  if !defined(LIBATFRAME_UTILS_ENABLE_FORWARD_FMTTEXT) && defined(ATFRAMEWORK_UTILS_ENABLE_FORWARD_FMTTEXT)
#    define LIBATFRAME_UTILS_ENABLE_FORWARD_FMTTEXT ATFRAMEWORK_UTILS_ENABLE_FORWARD_FMTTEXT
#  endif
#  if !defined(LIBATFRAME_UTILS_ENABLE_RTTI) && defined(ATFRAMEWORK_UTILS_ENABLE_RTTI)
#    define LIBATFRAME_UTILS_ENABLE_RTTI ATFRAMEWORK_UTILS_ENABLE_RTTI
#  endif
#  if !defined(LIBATFRAME_UTILS_ENABLE_EXCEPTION) && defined(ATFRAMEWORK_UTILS_ENABLE_EXCEPTION)
#    define LIBATFRAME_UTILS_ENABLE_EXCEPTION ATFRAMEWORK_UTILS_ENABLE_EXCEPTION
#  endif
#  if !defined(LIBATFRAME_UTILS_ENABLE_STD_EXCEPTION_PTR) && defined(ATFRAMEWORK_UTILS_ENABLE_STD_EXCEPTION_PTR)
#    define LIBATFRAME_UTILS_ENABLE_STD_EXCEPTION_PTR ATFRAMEWORK_UTILS_ENABLE_STD_EXCEPTION_PTR
#  endif
#  if !defined(LIBATFRAME_UTILS_ENABLE_SOURCE_LOCATION) && defined(ATFRAMEWORK_UTILS_ENABLE_SOURCE_LOCATION)
#    define LIBATFRAME_UTILS_ENABLE_SOURCE_LOCATION ATFRAMEWORK_UTILS_ENABLE_SOURCE_LOCATION
#  endif

#  if !defined(CRYPTO_USE_OPENSSL) && defined(ATFRAMEWORK_UTILS_CRYPTO_USE_OPENSSL)
#    define CRYPTO_USE_OPENSSL ATFRAMEWORK_UTILS_CRYPTO_USE_OPENSSL
#  endif
#  if !defined(CRYPTO_USE_LIBRESSL) && defined(ATFRAMEWORK_UTILS_CRYPTO_USE_LIBRESSL)
#    define CRYPTO_USE_LIBRESSL ATFRAMEWORK_UTILS_CRYPTO_USE_LIBRESSL
#  endif
#  if !defined(CRYPTO_USE_BORINGSSL) && defined(ATFRAMEWORK_UTILS_CRYPTO_USE_BORINGSSL)
#    define CRYPTO_USE_BORINGSSL ATFRAMEWORK_UTILS_CRYPTO_USE_BORINGSSL
#  endif
#  if !defined(CRYPTO_USE_MBEDTLS) && defined(ATFRAMEWORK_UTILS_CRYPTO_USE_MBEDTLS)
#    define CRYPTO_USE_MBEDTLS ATFRAMEWORK_UTILS_CRYPTO_USE_MBEDTLS
#  endif
#  if !defined(CRYPTO_USE_LIBSODIUM) && defined(ATFRAMEWORK_UTILS_CRYPTO_USE_LIBSODIUM)
#    define CRYPTO_USE_LIBSODIUM ATFRAMEWORK_UTILS_CRYPTO_USE_LIBSODIUM
#  endif
#  if !defined(LIBATFRAME_UTILS_ENABLE_RTTI) && defined(ATFRAMEWORK_UTILS_ENABLE_RTTI)
#    define LIBATFRAME_UTILS_ENABLE_RTTI ATFRAMEWORK_UTILS_ENABLE_RTTI
#  endif

#  if !defined(THREAD_TLS_USE_PTHREAD) && defined(ATFRAMEWORK_UTILS_THREAD_TLS_USE_PTHREAD)
#    define THREAD_TLS_USE_PTHREAD ATFRAMEWORK_UTILS_THREAD_TLS_USE_PTHREAD
#  endif
#endif

// clang-format on
