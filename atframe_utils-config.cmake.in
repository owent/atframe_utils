#.rst:
# atframe_utils-config.cmake
# --------
#
# Find the native atframe_utils includes and library.
#
#
# Result Variables
# ^^^^^^^^^^^^^^^^
#
# This module defines the following variables:
#
# ::
#
#   Libatframe_utils_INCLUDE_DIRS       - where to find config/atframe_utils_build_feature.h , etc.
#   Libatframe_utils_LIBRARY_DIRS       - where to find (lib)atframe_utils.(a/so/lib/dll/dylib), etc.
#   Libatframe_utils_LIBRARIES          - List of static libraries when using atframe_utils.
#   Libatframe_utils_FOUND              - True if atframe_utils found.
#   Libatframe_utils_VERSION            - Full version of atframe_utils
#
# ::
#   atframework::atframe_utils          - Imported target of atframe_utils
#
#
# =============================================================================
# Copyright 2019 OWenT.
#
# Distributed under the OSI-approved BSD License (the "License"); see accompanying file Copyright.txt for details.
#
# This software is distributed WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the License for more information.
# =============================================================================
# (To distribute this file outside of CMake, substitute the full License text for the above reference.)

set(${CMAKE_FIND_PACKAGE_NAME}_VERSION "@PROJECT_VERSION@")

@PACKAGE_INIT@

# ######################################################################################################################
# ${CMAKE_FIND_PACKAGE_NAME} source dir
set(${CMAKE_FIND_PACKAGE_NAME}_SOURCE_DIR "@PROJECT_SOURCE_DIR@")

set_and_check(${CMAKE_FIND_PACKAGE_NAME}_INCLUDE_DIRS "@PACKAGE_INCLUDE_INSTALL_DIR@")
set_and_check(${CMAKE_FIND_PACKAGE_NAME}_LIBRARY_DIRS "@PACKAGE_CMAKE_INSTALL_LIBDIR@")

include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_LIB_EXPORT_NAME@.cmake")

# Normal search.
set(${CMAKE_FIND_PACKAGE_NAME}_LIBRARIES atframework::atframe_utils)

# handle the QUIETLY and REQUIRED arguments and set ${CMAKE_FIND_PACKAGE_NAME}_FOUND to TRUE if all listed variables are
# TRUE
include("FindPackageHandleStandardArgs")
find_package_handle_standard_args(
  ${CMAKE_FIND_PACKAGE_NAME}
  FOUND_VAR ${CMAKE_FIND_PACKAGE_NAME}_FOUND
  REQUIRED_VARS ${CMAKE_FIND_PACKAGE_NAME}_INCLUDE_DIRS)

if(${CMAKE_FIND_PACKAGE_NAME}_FOUND)
  set(LIBATFRAME_UTILS_FOUND ${${CMAKE_FIND_PACKAGE_NAME}_FOUND})
endif()

# check_required_components(${CMAKE_FIND_PACKAGE_NAME})
